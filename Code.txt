using System; // основная библиотека
using System.IO; //библиотека для работы с файлами компьютера


namespace Тестовый_Проект
{
    class Program
    {
       static string path1 = "map.txt"; //это путь к текстовому файлу, с нарисованной картой
       static string path2 = "ships.txt"; //это путь к текстовому файлу, с описанием кораблей
       static string[] answer1 = new string[] { "Да", "Приступаем", "Так точно" }; // это массив вариантов ответов
      
      
       static void Main() //главная функция
       {
           Console.WriteLine("Добро пожаловать на борт! Ваша эскадра готова к бою. Все ждут вашего приказа к атаке. (Начать атаку?)"); //это выводится в консоль
      
           string command = Console.ReadLine(); //запрашивает ввод от пользователя
           char[,] map = ReadMap(path1);
           char[,] ships = ReadMap(path2);
      
           if (command == "Начать атаку")//проверка команды
           {
      
               Console.WriteLine("\t");//табуляция
               Console.Clear();//очищаем консоль
      
               DrawMap(ships);//рисуем описание кораблец
      
               Console.WriteLine("В дальнейшем вы всегда сможете вернуться к этому списку ,прописав команду /ships");
               Console.WriteLine("\t");
           }
           Console.WriteLine("Приступаем?");
      
           string answer = Console.ReadLine();
      
      
      
           if (answer == answer1[0] || answer == answer1[1] || answer == answer1[2])//проверяем совпадает ли введённый ответ хотя бы с одним элементом из массива инициализированного выше
           {
               Console.Clear();
               DrawMap(map);//рисуем саму карту
               Console.WriteLine("Назовите первую координату: ");
               int cordinatey = int.Parse(Console.ReadLine());
               Console.WriteLine("Назовите вторую координату: ");
               int cordinatex = int.Parse(Console.ReadLine());
               Try(cordinatey, cordinatex, map);
           }
           
      
      
      
       }
      
       public static char[,] ReadMap(string path)//функция для считывания карты. Path соответственно это путь к файлу
       {
           string[] file = File.ReadAllLines(path);//читаем все линии из этого файла
      
           char[,] map = new char[GetMaxLengthofLines(file), file.Length];//переносим строковый массив в двумерный массив символов для удобства работы
      
           for (int y = 0; y < file.Length; y++)
           {
               for (int x = 0; x < file[y].Length; x++)//весь цикл for предназначен ддля перебора элементов массива. Поскольку у нас двумерный массив, то используем вложенный цикл(сначала проходимся по y, тоесть по высоте, потом по x, тоесть по длине
               {
                   map[x, y] = file[y][x];
               }
           }
      
           return map;
       }
      
       public static int GetMaxLengthofLines(string[] lines)//функция для получения максимальной длины строк в массиве
       {
           int maxLength = 0;
      
           foreach (var line in lines)
           {
               if (line.Length > maxLength)
                   maxLength = line.Length;
           }
      
           return maxLength;
       }
      
       static void DrawMap(char[,] map)//функиция для отрисовки карты. ГЛАВНАЯ ПРОБЛЕМА!!!
       {
           
      
      
           for (int y = 0; y < map.GetLength(1); y++)//весь цикл for используем для чтения и отрисовки карты(массива)
           {
               for (int x = 0; x < map.GetLength(0); x++)
               {
                   Console.Write(map[x, y]);
      
                   
      
      
      
               }
               Console.Write("\n");//каждый раз, как только отрисуем строку, переходим на следубщую
           }
      
           
      
           
       }
        
        private static void Try(int cordinatex, int cordinatey, char[,] map)//функция интерактива в игре. ГЛАВНАЯ ПРОБЛЕМА!!!
        {
            

            Random random = new Random();//создаём объект класса Random

            int MaxValue = 11; //устанавливаем максимальное значение для всех двух осей(y и x)
          

            int x = random.Next(5, 11);//создаём рандомное число в заданном диапазоне, которое будет выступать координатой точки
            int y = random.Next(5, 11);//создаём рандомное число в заданном диапазоне, которое будет выступать координатой точки




                if (map[x, y] == Convert.ToChar("]"))//проверка. Не находится ли на заданной координате квадратная скобка
                {
                    map[x - 1, y] = Convert.ToChar('.');

                    x--;//если значение true значит уменьшаем значение x на 1, чтобы тока встала по центру
                }
              
                else if (map[x, y] == Convert.ToChar("["))//проверка. Не находится ли на заданной координате квадратная скобка повёрнутая в другую сторону
                {
                    map[x + 1, y] = Convert.ToChar('.');
                    x++;//если значение true значит увеличиваем значение x на 1, чтобы тока встала по центру
                
                }
                else if( x <= 2 )//проверка. Не является ли коорд
                {
                    map[x + 2, y] = Convert.ToChar('.');
                    x = x + 2;
                }
                //else if (y <= 2)
                //{
                  //  map[x, y + 1] = Convert.ToChar('.');
                    //y++;
                //}

                if (map[cordinatex + 4, cordinatey + 2] == '.')//ну и дальше ввод координат от пользователя, вот с этим и будем разбираться.
                {
                    Console.WriteLine("Вы попали!");

                }
                if (cordinatex < 0 || cordinatex >= MaxValue || cordinatey < 0 || cordinatey >= MaxValue)
                {
                    Console.WriteLine("Ваша эскадра ушла за координаты, и была признана дезертирующей. Вас отстранили от должности и предали военному трибуналу.");
                }

                else
                {
                    Console.WriteLine("Вы не попали!");
                    
                }
            
            
        }


        
    }
}
